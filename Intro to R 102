## Programming with Data Part 2
## Control Flow

## if - condition
score <- 98

if (score >= 80) {
  print("Passed !!")
} else {
  print("Failed !!")
}

## grade A B C D Failed
## score >= 90; A
## score >= 80; B
## score >= 70; C
## score >= 60; D
## below 60; Failed

score <- 35

if (score >= 90) {
    print("A")  
} else if (score >= 80) {
    print("B")
} else if (score >= 70) {
    print("C")
} else if (score >= 60) {
    print("D")
} else {
    print("Failed")
}

## Code Block { } 
print(score)
ifelse(score >= 90, "Passed", "Failed")

(student_scores <- c(67, 89, 82, 95, 99))

ifelse(student_scores >= 90, "Passed", "Failed")

## for loop
(student_scores <- c(67, 89, 82, 95, 99))

for (score in student_scores) {
  print(score - 5)
}

student_scores - 5

## while loop
x <- 10

while (x > 0) {
  print("Hello World!")
  ## update counter variable
  x <- x - 1
}

## Function Revisited

add_two_nums <- function(val1, val2) {
  val1 + val2
}

my_cube <- function(base, power = 3) {
  base ** power
}

## Function Example with Control Flow
grader <- function(score) {
  if(score >= 80) {
    return("Passed")
  } else {
    return("Failed")
  }
}

complete_grader <- function(score) {
  if (score >= 90) {
    print("A")  
  } else if (score >= 80) {
    print("B")
  } else if (score >= 70) {
    print("C")
  } else if (score >= 60) {
    print("D")
  } else {
    print("Failed")
  }
}

## print "Hi" to each of our friends
friends <- c("Toy", "Wan", "Ink")

helloFriends <- function(friends) {
  for (friend in friends) {
    print( paste("Hi!", friend))
  }
}

## test function
helloFriends(friends)

## subset : extract information from data structure

x <- c(50, 25, 100, 38, 69)

## subset by position
x[1]
x[4]
x[5]
x[1:3]
x[4:5]
x[ c(1,3,5) ]

## subset by condition
x >= 50
x[ x >= 50 ] ## get values that return TRUE!
x[ x < 40 ]

## subset by name
scores <- c(Toy = 50, 
            David = 25, 
            Marry = 100, 
            John = 38, 
            Kevin = 69)

scores["Marry"]
scores[ c("Kevin", "Toy", "John") ]

names(scores[ scores >= 50])

scores[1]
scores[c(1,5)]


























