## Useful Shortcut in RStudio
CTRL+ENTER       ## to execute our code
CTRL+L           ## to clear console
CTRL+SHIFT+N     ## to open new script
CTRL+1           ## jump to script editor
CTRL+2           ## jump to console
CTRL+SHIFT+C     ## comment line




r
## create variables
income <- 50000
expense <- 35000
saving <- income - expense
print(saving)

## delete/ remove variables
rm(income)
rm(expense)
rm(saving)




r
## compare values
1 + 1 == 2
1 + 1 != 2 ## not equal
5 > 2
5 < 2
5 >= 2
5 <= 2

## R is case-sensitive
"Hello" == "hello"   ## FALSE
"School" == "School" ## TRUE





r
## basic data types
my_name <- "David"
my_age <- 25L
my_gpa <- 3.54
is_male <- TRUE

## check class
class(my_name)  ## character
class(my_age)   ## integer
class(my_gpa)   ## numeric
class(is_male)  ## logical






r
## there are two types of factor
## categorical factor
product_cat <- c("Home", "Home", "Office", "Garden", "Office")
product_cat <- factor(product_cat)  

## ordinal factor
temp_level <- c("Medium", "Low", "Low", "High")
temp_level <- factor(temp_level, levels = c("Low", "Medium", "High"), ordered = TRUE)

## print them in console
print(product_cat)
print(temp_level)



r
## as.__() function
x <- 100
char_x <- as.character(x)
num_x <- as.numeric(char_x)

## TRUE=1, FALSE=0
as.logical(0)     ## FALSE
as.logical(1)     ## TRUE
as.numeric(TRUE)  ## 1
as.numeric(FALSE) ## 0



r
## vector
1:10
16:25

## seq() function
seq(from = 1, to = 100, by = 5)

## c() function is very popular
friends <- c("David", "Marry", "Anna", "John", "William")
ages <- c(30, 31, 25, 29, 32)
is_male <- c(TRUE, FALSE, FALSE, TRUE, TRUE)

## check length of a vector
length(friends)  ## 5




r
## matrix is similar to vector
x <- 1:25
dim(x) <- c(5, 5)

## matrix function
m1 <- matrix(1:6, ncol=3, nrow=2, byrow=TRUE)

## element wise computation
m1 * 2
m1 + 100




r
## create list
my_list <- list(myName = "Toy",
                myAge = 32,
                myMatrix = matrix(1:100, ncol=10),
                myFriends = c("Wan", "Ink", "Aan", "Top", "Bee"),
                awesomeTeacher = TRUE)

## get an element from a list
my_list$myName
my_list$myFriends





r
## create dataframe from vectors
friends <- c("Wan", "Ink", "Aan", "Bee", "Top")
ages <- c(26, 27, 32, 31, 28)
locations <- c("New York", "London", "London", "Tokyo", "Manchester")
movie_lover <- c(TRUE, TRUE, FALSE, TRUE, TRUE)

df <- data.frame(friends, ages, locations, movie_lover)

## create dataframe from list
my_list <- list(friends = friends,
                ages = ages,
                locations = locations,
                movie_lover = movie_lover)

df <- data.frame(my_list)

## view dataframe
View(df)

## review dataframe structure
str(df)





r
## example - how to subset a vector
## 1. subset by position
friends[1]
friends[2]
friends[1:3]
friends[4:5]
friends[c(1,3,5)]

## 2. subset by condition
ages[ages <= 30]
ages[ages > 30]

## 3. subset by name
names(ages) <- friends
ages["Wan"]  ## 26
ages["Bee"]  ## 31
ages[c("Top", "Wan", "Bee")]  ## 28 26 31

## example - how to subset a dataframe
df[1:2,  ]   ## row 1-2, all columns
df[ , 1:2]   ## all rows, column 1-2
df[3, 5]     ## row 3, column 5
df[ , "locations"]
df[ , c("friends", "movie_lover")]

## subset by condition (filter records)
df[df$movie_lover == TRUE, ]
df[df$ages < 30, ]
df[df$friends == "Top", ]
